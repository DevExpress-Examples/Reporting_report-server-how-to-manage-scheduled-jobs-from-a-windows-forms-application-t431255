Imports DevExpress.ReportServer.ServiceModel.ConnectionProviders
Imports DevExpress.ReportServer.ServiceModel.DataContracts
Imports System
Imports System.Collections.Generic
Imports System.Threading
Imports System.Threading.Tasks
Imports System.Windows.Forms

Namespace ScheduledTasksAPIClientDemo
    Partial Public Class MainForm
        Inherits Form

        ' Specifies the Report Server address.
        Public Const ServerAddress As String = "http://localhost:83"

        ' Specifies the connection provider for accessing the Report Server.
        ' The Guest connection provider is used by default.
        ' To be able to run the application, make sure that the Guest account
        ' is activated in the Report Server administrative panel.
        Private ReadOnly serverConnection As ConnectionProvider = New WindowsUserConnectionProvider(ServerAddress)

        Public Sub New()
            InitializeComponent()
        End Sub

        ' The following method obtains the list of all scheduled jobs from the server 
        ' and displays this list in a grid control.
        Private Sub MainForm_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
            splashScreenManager1.ShowWaitForm()

            serverConnection.DoWithScheduledJobAsync(Function(x) x.GetScheduledJobsAsync(Nothing)).ContinueWith(Sub(taskFunc)
                splashScreenManager1.CloseWaitForm()
                If taskFunc.IsFaulted Then
                    MessageBox.Show(taskFunc.Exception.Flatten().InnerException.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
                Else
                    FillScheduledJobListBox(taskFunc.Result)
                End If
            End Sub, TaskScheduler.FromCurrentSynchronizationContext())
        End Sub

        Private Sub FillScheduledJobListBox(ByVal scheduledJobs As IEnumerable(Of ScheduledJobCatalogItemDto))
            scheduledJobsGrid.DataSource = scheduledJobs
            scheduledJobsView.BestFitColumns()
        End Sub

        ' The following method displays the Scheduler Task Viewer form
        ' that enables you to inspect and manage a selected task.
        Private Sub showScheduledJobButton_Click(ByVal sender As Object, ByVal e As EventArgs) Handles showScheduledJobButton.Click
            Dim selectedId = CType(scheduledJobsView.GetFocusedRowCellValue("Id"), Integer?)
            If selectedId.HasValue Then
                Dim form = New SchedulerJobViewerForm(selectedId.Value, serverConnection) With {.Owner = Me}
                form.ShowDialog()
            End If
        End Sub

        ' The following method displays the Scheduler Job Results form 
        ' that lists all documents generated by a selected task 
        ' and enables you to view a specific document.
        Private Sub showScheduledJobResultsButton_Click(ByVal sender As Object, ByVal e As EventArgs) Handles showScheduledJobResultsButton.Click
            Dim selectedId = CType(scheduledJobsView.GetFocusedRowCellValue("Id"), Integer?)
            Dim selectedName = TryCast(scheduledJobsView.GetFocusedRowCellValue("Name"), String)
            If selectedId.HasValue Then
                Dim form = New SchedulerJobResultsForm(selectedId.Value, selectedName, serverConnection) With {.Owner = Me}
                form.ShowDialog()
            End If
        End Sub

        Private Sub scheduledJobsView_FocusedRowChanged(ByVal sender As Object, ByVal e As DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs) Handles scheduledJobsView.FocusedRowChanged
            showScheduledJobButton.Enabled = scheduledJobsView.SelectedRowsCount > 0
            showScheduledJobResultsButton.Enabled = scheduledJobsView.SelectedRowsCount > 0
        End Sub

    End Class
End Namespace
